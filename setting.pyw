#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Wed Jan 16 13:54:27 2013

import wx
import os
import wx.lib.intctrl
import thread

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        self.dict = {"BATCH_SIZE": 15, "BATCH_DELAY": 5, "LENGTH_THRSH": 1000, "BATCH_TX_THRESH": 4, "RELAY_THRESH": 1000, "RELAY_BASIC": 250, "CLEANUP_THRESH": 60, "MIN_WORK_RATE": 125, "MAX_WORK_RATE": 2000, "FB_CYCLE": 10}
        self.relay = {"method": "basic"}
        self.relay_m = ["basic", "feedback", "rssi", "disable", "feedback_mod"]
        try:
            f = open ("queueing.ini","r")
            data = f.read()
            f.close()
            data = data.replace("[queueing]\n", "").replace("[relay]\n", "")
            list = data.split("\n")
            for a in list:
                #a = a.replace("\ ", "").replace("\t", "")
                kandv = a.split("=")
                if kandv[0] in self.dict:
                    self.dict[kandv[0]] = int(kandv[1])
                elif kandv[0] in self.relay:
                    self.relay[kandv[0]] = kandv[1]
        except Exception:
	        wx.MessageBox('No default queueing.ini', 'Info', wx.OK | wx.ICON_ERROR)
        	
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.label_9 = wx.StaticText(self.panel_1, -1, "Configuration")
        self.label_8 = wx.StaticText(self.panel_1, -1, "")
        self.label_1 = wx.StaticText(self.panel_1, -1, "Segment Size (frames)")
        self.text_ctrl_1 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["BATCH_SIZE"])
        self.label_2 = wx.StaticText(self.panel_1, -1, "Seg. Gathering Time (ticks)")
        self.text_ctrl_2 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["BATCH_DELAY"])
        self.label_3 = wx.StaticText(self.panel_1, -1, "Min. Frame Length (bytes)")
        self.text_ctrl_3 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["LENGTH_THRSH"])
        self.label_4 = wx.StaticText(self.panel_1, -1, "Max. TX times (times)")
        self.text_ctrl_4 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["BATCH_TX_THRESH"])
        self.label_5 = wx.StaticText(self.panel_1, -1, "Work Threshold")
        self.text_ctrl_5 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["RELAY_THRESH"])
        self.label_6 = wx.StaticText(self.panel_1, -1, "Initial Work Rate")
        self.text_ctrl_6 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["RELAY_BASIC"])
        self.label_7 = wx.StaticText(self.panel_1, -1, "Queue clean-up time (secs)")
        self.text_ctrl_18 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["MIN_WORK_RATE"])
        self.label_18 = wx.StaticText(self.panel_1, -1, "Min. Work Rate")
        self.text_ctrl_19 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["MAX_WORK_RATE"])
        self.label_19 = wx.StaticText(self.panel_1, -1, "Max. Work Rate")
        self.text_ctrl_7 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["CLEANUP_THRESH"])
        self.label_20 = wx.StaticText(self.panel_1, -1, "Feedback Cycle")
        self.text_ctrl_20 = wx.lib.intctrl.IntCtrl(self.panel_1, -1, self.dict["FB_CYCLE"])
        self.label_10 = wx.StaticText(self.panel_1, -1, "Relay Method")
        idx = 0
        if self.relay["method"] in self.relay_m:
            idx = self.relay_m.index(self.relay["method"])
        self.combo_box_1 = wx.ComboBox(self.panel_1, -1, choices=self.relay_m, style=wx.CB_DROPDOWN|wx.CB_SIMPLE|wx.CB_READONLY)
        self.combo_box_1.SetSelection(idx)
        self.button_1 = wx.Button(self.panel_1, -1, "Generate")
        self.button_2 = wx.Button(self.panel_1, -1, "Cancel")
        self.button_3 = wx.Button(self.panel_1, -1, "RUN")
        self.button_4 = wx.Button(self.panel_1, -1, "Gen+Run")
        
        self.button_1.Bind(wx.EVT_BUTTON, self.gen)
        self.button_2.Bind(wx.EVT_BUTTON, self.cancel)
        self.button_3.Bind(wx.EVT_BUTTON, self.run)
        self.button_4.Bind(wx.EVT_BUTTON, self.gr)
        self.text_ctrl_1.Bind(wx.EVT_TEXT, self.keyin1)
        self.text_ctrl_2.Bind(wx.EVT_TEXT, self.keyin2)
        self.text_ctrl_3.Bind(wx.EVT_TEXT, self.keyin3)
        self.text_ctrl_4.Bind(wx.EVT_TEXT, self.keyin4)
        self.text_ctrl_5.Bind(wx.EVT_TEXT, self.keyin5)
        self.text_ctrl_6.Bind(wx.EVT_TEXT, self.keyin6)
        self.text_ctrl_7.Bind(wx.EVT_TEXT, self.keyin7)
        self.text_ctrl_18.Bind(wx.EVT_TEXT, self.keyin8)
        self.text_ctrl_19.Bind(wx.EVT_TEXT, self.keyin9)
        self.text_ctrl_20.Bind(wx.EVT_TEXT, self.keyin10)
        self.combo_box_1.Bind(wx.EVT_COMBOBOX, self.s_method)
		
        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        #self.text_ctrl_7.Bind(wx.EVT_CHAR, self.handle_keypress)

    def s_method(self, event):
        self.relay["method"] = self.combo_box_1.GetValue()

    def keyin1(self, event):
        self.dict["BATCH_SIZE"] = self.text_ctrl_1.GetValue()
        		
    def keyin2(self, event):
        self.dict["BATCH_DELAY"] = self.text_ctrl_2.GetValue()
        		
    def keyin3(self, event):
        self.dict["LENGTH_THRSH"] = self.text_ctrl_3.GetValue()
        		
    def keyin4(self, event):
        self.dict["BATCH_TX_THRESH"] = self.text_ctrl_4.GetValue()
        		
    def keyin5(self, event):
        self.dict["RELAY_THRESH"] = self.text_ctrl_5.GetValue()
        		
    def keyin6(self, event):
        self.dict["RELAY_BASIC"] = self.text_ctrl_6.GetValue()
		
    def keyin7(self, event):
        self.dict["CLEANUP_THRESH"] = self.text_ctrl_7.GetValue()
        
    def keyin8(self, event):
        self.dict["MIN_WORK_RATE"] = self.text_ctrl_18.GetValue()

    def keyin9(self, event):
        self.dict["MAX_WORK_RATE"] = self.text_ctrl_19.GetValue()

    def keyin10(self, event):
        self.dict["FB_CYCLE"] = self.text_ctrl_20.GetValue()

    def run(self, event):
        thread.start_new_thread(self.run_t, ())

    def run_t(self):
        data = os.popen3("make rebuild")
	
    def gr(self, event):
        try:
            data = "[queueing]\n"
            for a in self.dict:
                data = data + a + "=" + str(self.dict[a]) + "\n"
            data = data + "[relay]\n"
            for a in self.relay:
                data = data + a + "=" + self.relay[a] + "\n"
            f = open ("queueing.ini","w")
            f.write(data)
            f.close()
            thread.start_new_thread(self.run_t, ())
        except Exception:
	        wx.MessageBox('FILE:queueing.ini fail to be generated', 'Info', wx.OK | wx.ICON_ERROR)
	
    def gen(self, event):
        try:
            data = "[queueing]\n"
            for a in self.dict:
                data = data + a + "=" + str(self.dict[a]) + "\n"
            data = data + "[relay]\n"
            for a in self.relay:
                data = data + a + "=" + self.relay[a] + "\n"
            f = open ("queueing.ini","w")
            f.write(data)
            f.close()
            wx.MessageBox('FILE:queueing.ini generated', 'Info', wx.OK | wx.ICON_INFORMATION)
        except Exception:
	        wx.MessageBox('FILE:queueing.ini fail to be generated', 'Info', wx.OK | wx.ICON_ERROR)
	
    def cancel(self, event):
        exit()

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Setting")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(14, 2, 0, 0)
        grid_sizer_1.Add(self.label_9, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_8, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_2, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_3, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_4, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_7, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_7, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_5, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_5, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_6, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_6, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_18, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_18, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_19, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_19, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_20, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.text_ctrl_20, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_10, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.combo_box_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_2, 0, wx.EXPAND, 0)
        self.panel_1.SetSizer(grid_sizer_1)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class MyFrame
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
